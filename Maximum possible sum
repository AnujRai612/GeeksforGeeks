	long int returnMaxSum(int A[], int B[], int n)
	{
	   // Your code goes here
	   unordered_map<int,int>mapp;
	   long int sum=0;
	   int i=0,j=0;
	   long int ans=INT_MIN;
	   while(j<n)
	   {
	       sum+=B[j];
	       mapp[A[j]]++;
	       if(mapp.size()<j-i+1)
	       {
	           while(mapp.size()<j-i+1)
	           {
	               mapp[A[i]]--;
	               sum-=B[i];
	               
	               if(mapp[A[i]]==0)
	               mapp.erase(A[i]);
	               i++;
	           }
               ans=max(ans,sum);
	           j++;
	       }
	       
	       else if(mapp.size()==j-i+1)
	       {
	           ans=max(ans,sum);
	           j++;
	       }
	   }
	   return ans;
	}
